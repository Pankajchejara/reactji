{"version":3,"file":"static/js/433.d706bba5.chunk.js","mappings":"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","sources":["Common.jsx/Icon.jsx","Common.jsx/NavbarDetails/Cardgame.jsx"],"sourcesContent":["export default function IconBtn({\r\n    text,\r\n    onclick,\r\n    children,\r\n    disabled,\r\n    outline,\r\n    customClasses,\r\n    type,\r\n\r\n  }) {\r\n    return (\r\n      <button\r\n        disabled={disabled}\r\n        onClick={onclick}\r\n        className={`flex items-center hover:scale-95 transition duration-300 ${\r\n          outline ? \"border border-yellow-50 bg-transparent text-white\" : \"bg-blue-50 text-black\"\r\n        } cursor-pointer gap-x-2 rounded-md py-2 px-5 font-semibold text-richblack-900 ${customClasses}`}\r\n        type={type}\r\n      >\r\n        {children ? (\r\n          <>\r\n            <span className={`${outline && \"text-yellow-50\"}`}>{text}</span>\r\n            {children}\r\n          </>\r\n        ) : (\r\n          text\r\n        )}\r\n      </button>\r\n    )\r\n  }","import React, { useState, useEffect } from 'react';\r\nimport RightAnswer from '../../data/right.mp3'\r\nimport WrongAnswer from '../../data/wrong.mp3'\r\nimport Spinner from '../../components/Spinner';\r\nimport IconBtn from '../Icon';\r\nconst Cardgame = () => {\r\n  const [wordList, setWordList] = useState([]);\r\n  const [image, setImage] = useState('');\r\n  const [selectedWord, setSelectedWord] = useState(\"\");\r\n  const [score, setScore] = useState(0);\r\n  const [done, setDone] = useState(true);\r\nconst [loading,setLoading]=useState(true);\r\nconst ErrorImage=\"https://res.cloudinary.com/dqr1ihw8d/image/upload/v1709390466/hk1afhsrucj0dbdukkpd.jpg\"\r\n  const unsplashurl=`https://api.unsplash.com/search/photos?page=1&query=${selectedWord.word}&client_id=p7Sl3eBqlIgMOZnRAGaC0g0ACR3lf5risDUIPGZDeXc` \r\n  const[wrong,setWrong]=useState(0);\r\nconst rightaud =new Audio(RightAnswer)\r\nconst wrongaud =new Audio(WrongAnswer)\r\n\r\nasync function fetchdata(){\r\n\r\n\r\ntry{\r\nsetLoading(true);\r\n  const unsplashdata=await fetch(unsplashurl)\r\n  const unsplashJsonData=await unsplashdata.json()\r\n  setLoading(false);\r\n  setImage(unsplashJsonData.results[0].urls.small)\r\n}\r\ncatch{\r\n  setImage(ErrorImage)\r\n}\r\n}\r\n  useEffect(() => {\r\n   \r\n    const wordsData = [\r\n      { word: 'Banana', image: image},\r\n      { word: 'Apple', image:image},\r\n      { word: 'Dog', image: image},\r\n      { word: 'Carrot', image: image},\r\n      { word: 'elephant', image: image },\r\n      { word: 'grapes', image: image },\r\n      { word: 'fish', image: image },\r\n      { word: 'hen', image: image },\r\n      { word: 'jacket', image: image },\r\n      { word: 'lion', image: image },\r\n      { word: 'Mango', image: image },\r\n      { word: 'orange', image: image },\r\n      { word: 'nest', image: image },\r\n      { word: 'iron', image: image },\r\n      { word: 'parrot', image: image },\r\n      { word: 'queen', image: image },\r\n\r\n    ];\r\n \r\n    setWordList(wordsData);\r\n    setSelectedWord(getRandomWord(wordsData));\r\n  }, []);\r\n\r\n\r\n  useEffect(()=>{\r\n fetchdata();\r\n  },[selectedWord.word])\r\n\r\n\r\n  const getRandomWord = (wordArray) => {\r\n    const randomIndex = Math.floor(Math.random() * wordArray.length);\r\n    return wordArray[randomIndex];\r\n    \r\n  };\r\n\r\n  const handleWordClick = (selected) => {\r\n    if (selected.word === selectedWord.word) {\r\n      setScore(score + 1);\r\n      rightaud.play();\r\n      setSelectedWord(getRandomWord(wordList));\r\n    }\r\n    else{\r\n setWrong(wrong+1);\r\n wrongaud.play();\r\n    }\r\n  };\r\n\r\n  function clickToSubmit(){\r\n    setDone(false)\r\n  }\r\n  function clickToRestart(){\r\n    setDone(true)\r\n    setScore(0)\r\n    setWrong(0)\r\n  }\r\n  function backhandler(){\r\n    setDone(true)\r\n    setScore(0);\r\n    setWrong(0);\r\n  }\r\n\r\n  return (\r\n    <div className='py-[80px] w-full '>\r\n  {\r\n    done?(  <div className='flex flex-col justify-center items-center rounded-[10px] w-[80%] mx-auto bg-richblack-700'>\r\n        <h1 className='text-3xl font-bold text-white mt-[10px] '>Kids Learning Game - Words</h1>\r\n        <br/>\r\n        <p className='text-blue-100'>RightAnswer: {score}</p>\r\n        <p className='text-red-100'>WrongAnswer: {wrong}</p>\r\n        <div className='flex justify-center items-center flex-wrap' >\r\n          {wordList.map((wordData, index) => (\r\n            <div className='hover:bg-richblack-25 text-white '\r\n              key={index}\r\n              style={{\r\n                margin: '10px',\r\n                padding: '20px',\r\n                border: '1px solid #ccc',\r\n                borderRadius: '10px',\r\n                cursor: 'pointer',\r\n                textAlign: 'center',\r\n                fontSize: '18px',\r\n              }}\r\n              onClick={() => handleWordClick(wordData)}\r\n            >\r\n              {wordData.word}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <p className='text-white opacity-80'>Click on the word for the corresponding image:</p>\r\n      {\r\n       loading? (<div className='w-[600px] h-[200px] text-white flex justify-center items-center'>Please wait ....<Spinner/></div>):(\r\n       <div className=' flex items-center justify-center'>\r\n        <img className='object-fill h-full w-[600px] rounded-md'\r\n        src={selectedWord ? image : ''}\r\n        alt={selectedWord ? selectedWord : ''}\r\n        style={{ maxWidth: '200px', maxHeight: '200px' }}\r\n      />\r\n       </div>) \r\n      } \r\n          \r\n  \r\n          \r\n        </div>\r\n        <div className='w-full flex justify-evenly mb-[20px] '>\r\n        <IconBtn onclick={clickToSubmit} className='w-[100px] bg-blue-100 p-1 rounded-md hover:bg-blue-200'>Submit</IconBtn> \r\n  <IconBtn outline={true} onclick={clickToRestart} className='w-[100px] bg-brown-100  p-1 rounded-md hover:bg-brown-300'>RestartGame</IconBtn> \r\n        </div>\r\n \r\n      </div>):(\r\n\r\n        <div className='w-[90%] h-[500px] gap-y-3 mt-5 mx-auto bg-richblack-700 flex flex-col justify-center items-center text-center'>\r\n             <p className='text-blue-100'> RightAnswer : {score}</p>\r\n             <p className='text-red-100'> WrongAnswer : {wrong}</p>\r\n        <IconBtn onclick={backhandler} outline={true}>Back to Game</IconBtn>\r\n          </div>\r\n      )\r\n  }    \r\n\r\n  \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nexport default Cardgame;\r\n"],"names":["IconBtn","_ref","text","onclick","children","disabled","outline","customClasses","type","_jsx","onClick","className","concat","_jsxs","_Fragment","Cardgame","wordList","setWordList","useState","image","setImage","selectedWord","setSelectedWord","score","setScore","done","setDone","loading","setLoading","unsplashurl","word","wrong","setWrong","rightaud","Audio","RightAnswer","wrongaud","WrongAnswer","useEffect","wordsData","getRandomWord","async","unsplashdata","fetch","unsplashJsonData","json","results","urls","small","fetchdata","wordArray","Math","floor","random","length","map","wordData","index","style","margin","padding","border","borderRadius","cursor","textAlign","fontSize","play","marginTop","Spinner","src","alt","maxWidth","maxHeight"],"sourceRoot":""}