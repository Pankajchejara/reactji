{"version":3,"file":"static/js/740.0ec4e145.chunk.js","mappings":"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","sources":["Common.jsx/Icon.jsx","components/InstructorCourseDetail/CreateCourse.jsx"],"sourcesContent":["export default function IconBtn({\r\n    text,\r\n    onclick,\r\n    children,\r\n    disabled,\r\n    outline,\r\n    customClasses,\r\n    type,\r\n\r\n  }) {\r\n    return (\r\n      <button\r\n        disabled={disabled}\r\n        onClick={onclick}\r\n        className={`flex items-center hover:scale-95 transition duration-300 ${\r\n          outline ? \"border border-yellow-50 bg-transparent text-white\" : \"bg-blue-50 text-black\"\r\n        } cursor-pointer gap-x-2 rounded-md py-2 px-5 font-semibold text-richblack-900 ${customClasses}`}\r\n        type={type}\r\n      >\r\n        {children ? (\r\n          <>\r\n            <span className={`${outline && \"text-yellow-50\"}`}>{text}</span>\r\n            {children}\r\n          </>\r\n        ) : (\r\n          text\r\n        )}\r\n      </button>\r\n    )\r\n  }","import React, { useContext, useEffect, useState } from 'react'\r\nimport { Appcontext } from '../../context/Appcontext'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport AOS from 'aos'\r\nimport 'aos/dist/aos.css'\r\nimport Spinner from '../Spinner'\r\nimport { FaCloudUploadAlt } from \"react-icons/fa\";\r\nimport IconBtn from '../../Common.jsx/Icon'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst CreateCourse = () => {\r\n \r\n  \r\n  \r\n\r\nconst [isPlaying, setIsPlaying] = useState(false);\r\nconst [progress, setProgress] = useState(0);\r\n  const togglePlay = () => {\r\n    setIsPlaying((prevIsPlaying) => !prevIsPlaying);\r\n  };\r\n  const[image,setImage]=useState('')\r\n  const[video,setVideo]=useState('')\r\n \r\n  const[imageurl,setImageUrl]=useState('')\r\n  const[videourl,setvideoUrl]=useState('')\r\n  const[loading,setLoading]=useState(false)\r\n  const navigate = useNavigate();\r\n  const { setEnroll,enroll, mainDataOfCourse, setMainDataOfCourse, editId,toggle,settoggle } = useContext(Appcontext)\r\n\r\n  const ids = new Date().getTime().toString()\r\n\r\n  function changeHandler(e) {\r\n\r\n \r\n\r\n    const { name, value, files } = e.target;\r\n\r\n    setEnroll((prevData) => ({\r\n      ...prevData,\r\n      [name]: files ? files[0] : value,\r\n    }));\r\n\r\n    setImage(()=>({\r\n\r\n    \r\n      \r\n      [name]: files ? files[0] : value,})\r\n    );\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n   \r\n   \r\n    localStorage.setItem(\"Enroll\", JSON.stringify( (mainDataOfCourse)))\r\n    AOS.init({ duration: 1000 })\r\n  }, [mainDataOfCourse]);\r\n\r\n \r\nuseEffect(()=>{\r\ntoast.success(\"Video file Selected please click on upload video\")\r\n},[video])\r\n\r\n\r\n  // submit data \r\n\r\n  function submithandle(e){\r\n    e.preventDefault()\r\n    \r\n    if(!enroll){\r\n  alert(\"please\")\r\n    }\r\n\r\n    else if (!toggle){\r\n      if(isImageUrl(enroll.image)){\r\n        setMainDataOfCourse(\r\n          mainDataOfCourse.map((elem)=>{\r\n            if(elem.id===editId){\r\n              return {...elem,title:enroll.title,about:enroll.about,image:enroll.image,video:videourl}\r\n            }\r\n            return elem\r\n          })\r\n         )\r\n      }\r\n      else{\r\n        setMainDataOfCourse(\r\n          mainDataOfCourse.map((elem)=>{\r\n            if(elem.id===editId){\r\n              return {...elem,title:enroll.title,about:enroll.about,image:imageurl,video:videourl}\r\n            }\r\n            return elem\r\n          })\r\n         )\r\n\r\n      }\r\n  \r\n  \r\n   setEnroll(\"\")\r\n   settoggle(true)\r\n   navigate('/dashboard/mycourses')\r\n    }\r\n  \r\n    else{\r\n      \r\n      setEnroll((prev)=>({...prev,id:ids,video:videourl}))\r\n\r\n       setMainDataOfCourse((prev)=>(\r\n    \r\n        [...prev,{...enroll,id:ids,image:imageurl,video:videourl}])\r\n    \r\n    \r\n        )\r\n        \r\n\r\n          toast.success(\"Course Added Successfully\")\r\n        \r\n        navigate('/dashboard/mycourses')\r\n        setEnroll('')\r\n    \r\n  }\r\n  }\r\n  \r\n \r\n\r\n//  fetch image \r\n\r\n  async function  fetchImagedata(){\r\n    try{\r\n      setLoading(true)\r\n      let data = new FormData()\r\n  data.append(\"file\",image.image)\r\n  data.append(\"upload_preset\",\"pankaj\")\r\n  data.append(\"cloud_name\",\"dqr1ihw8d\")\r\n// start \r\nconst xhr = new XMLHttpRequest();\r\n\r\n  xhr.open(\r\n    'POST',\r\n    `https://api.cloudinary.com/v1_1/dqr1ihw8d/image/upload`,\r\n    true\r\n  );\r\n\r\n  xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n\r\n  xhr.upload.onprogress = (event) => {\r\n    if (event.lengthComputable) {\r\n      const percentCompleted = Math.round(\r\n        (event.loaded * 100) / event.total\r\n      );\r\n      setProgress(percentCompleted);\r\n    }\r\n  };\r\n\r\n  xhr.onreadystatechange = () => {\r\n    if (xhr.readyState === XMLHttpRequest.DONE) {\r\n      if (xhr.status === 200) {\r\n        const data = JSON.parse(xhr.responseText);\r\n        if(isImageUrl(data.secure_url)){\r\n                setImageUrl(data.secure_url)\r\n                setLoading(false)\r\n                toast.success(\"Image uploaded\")\r\n               setProgress(0)\r\n         }\r\n        \r\n        else{\r\n                setLoading(false)\r\n                toast.error(\"please select other file or image\")\r\n                setProgress(0)\r\n              }\r\n              \r\n      } else {\r\n          setLoading(false)\r\n        toast.error(\" Error ! please select image again\")\r\n        setProgress(0)\r\n      }\r\n      \r\n    }\r\n  };\r\nxhr.send(data);\r\n    }\r\n    catch(err){\r\n      setLoading(false)\r\n     toast.error(\" Error ! please select image again\")\r\n     setProgress(0)\r\n    }\r\n  }\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n   \r\n  // fetch video \r\n \r\n    const fetchdatavideo = async () => {\r\n      try {\r\n        if (!video) {\r\n          toast.alert('Please select a video file.');\r\n          return;\r\n        }\r\n         setLoading(true)\r\n        const formData = new FormData();\r\n        formData.append('file', video);\r\n        formData.append('upload_preset', 'pankaj');\r\n\r\n        const xhr = new XMLHttpRequest();\r\n\r\n        xhr.open(\r\n          'POST',\r\n          `https://api.cloudinary.com/v1_1/dqr1ihw8d/video/upload`,\r\n          true\r\n        );\r\n      \r\n        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n      \r\n        xhr.upload.onprogress = (event) => {\r\n          if (event.lengthComputable) {\r\n            const percentCompleted = Math.round(\r\n              (event.loaded * 100) / event.total\r\n            );\r\n            setProgress(percentCompleted);\r\n          }\r\n        };\r\n      \r\n        xhr.onreadystatechange = () => {\r\n          if (xhr.readyState === XMLHttpRequest.DONE) {\r\n            if (xhr.status === 200) {\r\n              const data = JSON.parse(xhr.responseText);\r\n              if(IsVideoUrl(data.secure_url)){\r\n                setvideoUrl(data.secure_url)\r\n  setEnroll((prev)=>{\r\n    return{...prev,video:data.secure_url}\r\n  })\r\n    \r\n                     \r\n                      setLoading(false)\r\n                      toast.success(\"Video uploaded\")\r\n                     setProgress(0)\r\n                }\r\n              \r\n              else{\r\n                      setLoading(false)\r\n                      toast.error(\"please select other file or video\")\r\n                      setProgress(0)\r\n                    }\r\n                    \r\n            } else {\r\n               setLoading(false)\r\n              toast.error(\" Error ! please select video again\")\r\n              setProgress(0)\r\n            }\r\n            \r\n          }\r\n        };\r\n      xhr.send(formData);\r\n          }\r\n          catch(err){\r\n            setLoading(false)\r\n           toast.error(\" Error ! please select image again\")\r\n           setProgress(0)\r\n          }\r\n        }\r\n\r\n\r\n\r\n  \r\nfunction submitImagehandle(e){\r\ne.preventDefault()\r\n    \r\nfetchImagedata();\r\n }\r\n\r\n\r\n\r\n\r\n  function isImageUrl(url) {\r\n    if(typeof(url)=='string'){\r\n\r\n      const imageExtensions = ['jpg', 'jpeg', 'png', 'gif', 'bmp']; \r\n    \r\n      const extension = url.split('.').pop().toLowerCase();\r\n     \r\n      return imageExtensions.includes(extension);\r\n    }\r\n    else{\r\n      return 0;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  function IsVideoUrl(url) {\r\n    if(typeof(url)=='string'){\r\n\r\n      const videoExtensions = ['mp4']; \r\n    \r\n      const extension = url.split('.').pop().toLowerCase();\r\n      \r\n      return videoExtensions.includes(extension);\r\n    }\r\n    else{\r\n      return 0;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  function changeHandlervideo(e){\r\n\r\nsetVideo(e.target.files[0])\r\n  }\r\nfunction subvideohandle(e){\r\ne.preventDefault();\r\n  fetchdatavideo()\r\n  \r\n}\r\n  \r\n\r\n  return (\r\n    <>\r\n  { !loading&& <div className='border w-11/12 mx-auto rounded-xl bg-pure-greys-900' data-aos=\"fade-up\">\r\n      <div className='w-11/12 mx-auto py-5'>\r\n        <div className='py-[20px] text-center'>\r\n          <h2 className='text-white text-center font-bold text-3xl'>Create course</h2>\r\n          <p className='text-red-100 text-center font-bold text-md'><sup>*</sup> Image size should be less than 500 kb</p>\r\n          <p className='text-red-100 text-center font-bold text-md'> <sup>*</sup>video size should be around 1 mb</p>\r\n        </div>\r\n\r\n        \r\n        <form className='gap-y-5' >\r\n\r\n\r\n<div className='gap-y-[20px] flex flex-col'>\r\n  \r\n{/* imagesection */}\r\n\r\n\r\n<div className='flex bg-pure-greys-700 justify-between gap-y-3  gap-x-4 enrollbox border-b-white'>\r\n\r\n\r\n        <div className=' w-full h-full  relative'onClick={()=>document.querySelector(\".input_field\").click()}>\r\n\r\n {\r\n  toggle?(enroll.image?(<img src={URL.createObjectURL(enroll.image)} alt=\"Not Available\" className=' w-full rounded-md h-full object-fill' />): (<div className='w-full h-full flex justify-center items-center text-white text-[100px] bg-pure-greys-600'><FaCloudUploadAlt /></div>)\r\n  ):\r\n  (enroll.image?(isImageUrl(enroll.image)?(<img src={enroll.image} alt='No available' className=' w-full rounded-md h-full object-fill' />):(<img src={URL.createObjectURL(enroll.image)} alt=\"not Available\" className=' w-full h-full aspect-square object-fill' />))\r\n   : (<div className='w-full h-full flex justify-center items-center text-white text-[100px] bg-pure-greys-600'><FaCloudUploadAlt /></div>))\r\n }\r\n <input type='file' name='image' accept=\"image/*\" className='text-white  input_field absolute top-9 hidden' onChange={changeHandler}  />\r\n        \r\n          </div>\r\n\r\n          \r\n<div className='flex items-center justify-center mr-7'>\r\n          <IconBtn onclick={submitImagehandle} outline={true} >UploadImage</IconBtn>\r\n</div>\r\n </div>\r\n          \r\n   {/* imagesectionend        */}\r\n  \r\n\r\n{/* videosection  start*/}\r\n<div className='  flex bg-pure-greys-700  justify-between enrollbox gap-y-3 gap-x-5 border-b-white'>\r\n          \r\n  <div className='w-full h-full  ' onClick={()=>document.querySelector(\".videoinput_field\").click()}>\r\n\r\n \r\n<video\r\nkey={enroll.video}\r\n      className='h-full w-full'\r\n       controls\r\n       autoPlay={isPlaying}\r\n       onClick={togglePlay}\r\n       style={{ cursor: 'pointer' }}\r\n     >\r\n       <source src={enroll.video} type=\"video/mp4\" />\r\n       Your browser does not support the video tag.\r\n     </video>\r\n\r\n\r\n\r\n     <input type='file' name='video' accept=\"video/*\" className='text-white videoinput_field hidden' onChange={changeHandlervideo}  />\r\n  </div>\r\n\r\n  \r\n\r\n \r\n<div className='flex items-center justify-center mr-7'>\r\n<IconBtn onclick={subvideohandle} outline={true} >UploadVideo</IconBtn>\r\n\r\n</div>\r\n</div>          \r\n    {/* videosection end        */}\r\n           \r\n        \r\n        \r\n        \r\n        \r\n        \r\n         <div>\r\n            <label htmlFor='title' className='text-white'>Title:</label>\r\n            <br />\r\n            <input value={enroll.title} onChange={changeHandler} type='text' name='title' id='tie' className='bg-pure-greys-700 text-white w-full py-[12px] rounded-xl border-b border-richblack-600 ' />\r\n          </div>\r\n          \r\n\r\n        \r\n          <div>\r\n            <label htmlFor='about' className='text-white '>About Course:</label>\r\n            <br />\r\n            <textarea value={enroll.about} onChange={changeHandler} id='tie' name='about' className='bg-pure-greys-700 w-full py-[12px] rounded-xl border-b-richblack-600  text-white cursor-text' required={true} />\r\n          </div>\r\n\r\n\r\n<div>\r\n       {\r\n        toggle?( <IconBtn  outline={true} className='text-white' text=\"Submit\" onclick={submithandle} type='submit'/>):(<IconBtn className='text-white' color=\"yellow\" text=\"Edit Course\" onclick={submithandle} type='submit'/>\r\n        )\r\n       }  \r\n </div>     \r\n\r\n </div>    \r\n        </form>\r\n\r\n       \r\n\r\n\r\n      </div>\r\n    </div>}\r\n { loading&& <div className='w-11/12 h-[500px] flex justify-center items-center'>\r\n <p className='text-white'> Uploading ... <span className='text-blue-100'>{progress} %</span>  </p>\r\n<Spinner/>\r\n   </div>}\r\n   </>\r\n  )\r\n}\r\n\r\nexport default CreateCourse\r\n"],"names":["IconBtn","_ref","text","onclick","children","disabled","outline","customClasses","type","_jsx","onClick","className","concat","_jsxs","_Fragment","CreateCourse","isPlaying","setIsPlaying","useState","progress","setProgress","image","setImage","video","setVideo","imageurl","setImageUrl","videourl","setvideoUrl","loading","setLoading","navigate","useNavigate","setEnroll","enroll","mainDataOfCourse","setMainDataOfCourse","editId","toggle","settoggle","useContext","Appcontext","ids","Date","getTime","toString","changeHandler","e","name","value","files","target","prevData","submithandle","preventDefault","prev","id","toast","success","isImageUrl","map","elem","title","about","alert","useEffect","localStorage","setItem","JSON","stringify","AOS","duration","url","imageExtensions","extension","split","pop","toLowerCase","includes","document","querySelector","click","src","URL","createObjectURL","alt","FaCloudUploadAlt","accept","onChange","async","data","FormData","append","xhr","XMLHttpRequest","open","setRequestHeader","upload","onprogress","event","lengthComputable","percentCompleted","Math","round","loaded","total","onreadystatechange","readyState","DONE","status","parse","responseText","secure_url","error","send","err","fetchImagedata","controls","autoPlay","togglePlay","prevIsPlaying","style","cursor","formData","videoExtensions","IsVideoUrl","fetchdatavideo","htmlFor","required","color","Spinner"],"sourceRoot":""}