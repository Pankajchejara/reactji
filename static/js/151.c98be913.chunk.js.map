{"version":3,"file":"static/js/151.c98be913.chunk.js","mappings":"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","sources":["components/Forms/SignupForm.jsx","components/Forms/LoginForm.jsx","components/Forms/Template.jsx","pages/Signup.js"],"sourcesContent":["import React, {useState } from 'react'\r\nimport { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {encrypt,decrypt} from 'n-krypta'\r\nimport toast from 'react-hot-toast';\r\n\r\nconst SignupForm = ({setIsLoggedIn}) => {\r\n    \r\nlet secretKey='@@123'\r\n\r\n    const navigate = useNavigate();\r\n \r\n    const [formData, setFormData] = useState({\r\n        firstName:\"\",\r\n        lastName:\"\",\r\n        email:\"\",\r\n        password:\"\",\r\n        confirmPassword:\"\",\r\n        dob:\"\",\r\n        about:\"\",\r\n        gender:\"\"\r\n        \r\n    })\r\n    \r\n    \r\n   \r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n    const [accountType, setAccountType] = useState(\"student\");\r\n\r\n\r\n    \r\n   \r\n    \r\n    \r\n    function changeHandler(event) {\r\n        \r\n        setFormData( (prevData) =>(\r\n            {\r\n                ...prevData,\r\n                [event.target.name]:event.target.value\r\n            }\r\n            ) )\r\n            \r\n        }\r\n        \r\n        function submitHandler(event) {\r\n            event.preventDefault();\r\n            if(formData.password !== formData.confirmPassword) {\r\n                \r\n                return ;\r\n            }\r\n            \r\n            setIsLoggedIn(true);\r\n            \r\n            const accountData = {\r\n                ...formData\r\n            };\r\n            \r\n            const finalData = {\r\n                ...accountData,\r\n                accountType\r\n            }\r\n         \r\n        let encryptFinalData=encrypt(finalData,secretKey)\r\n        \r\n            \r\n            localStorage.setItem(\"signUpData\",JSON.stringify(( encryptFinalData)))\r\n    \r\n         \r\n\r\n          \r\n\r\n           toast.success(\"SignUp Successful\")\r\n        navigate(\"/dashboard/profile\");\r\n\r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        {/* student-Instructor tab */}\r\n        <div\r\n        className='flex bg-pure-greys-700 p-1 gap-x-1 my-6 rounded-full max-w-max'>\r\n\r\n            <button\r\n            className={`${accountType === \"student\" \r\n            ?\r\n              \"bg-pure-greys-900 text-richblack-5\"\r\n            :\"bg-transparent text-richblack-200\"} py-2 px-5 rounded-full transition-all duration-200`}\r\n            onClick={()=> setAccountType(\"student\")}>\r\n                Student\r\n            </button>\r\n\r\n            <button\r\n            className={`${accountType === \"instructor\" \r\n            ?\r\n              \"bg-pure-greys-900 text-richblack-5\"\r\n            :\"bg-transparent text-richblack-200\"} py-2 px-5 rounded-full transition-all duration-200`}\r\n            onClick={() => setAccountType(\"instructor\")}>\r\n                Instructor\r\n            </button>\r\n        </div>\r\n\r\n        <form onSubmit={submitHandler} >\r\n        {/* first name and lastName */}\r\n            <div className='flex gap-x-4 mt-[20px]'>\r\n                    <label className='w-full'>\r\n                        <p className='text-[0.875rem] text-richblack-5 mb-1 leading-[1.375rem]'>First Name<sup className='text-pink-200'>*</sup></p>\r\n                        <input\r\n                            required\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            onChange={changeHandler}\r\n                            placeholder=\"Enter First Name\"\r\n                            value={formData.firstName}\r\n                            className='bg-pure-greys-700 rounded-[0.5rem] text-richblack-5 w-full p-[12px]  sm:placeholder:text-[16px] placeholder:text-[10px]'\r\n                        />\r\n                    </label>\r\n\r\n                    <label className='w-full'>\r\n                        <p className='text-[0.875rem] text-richblack-5 mb-1 leading-[1.375rem]'>Last Name<sup className='text-pink-200'>*</sup></p>\r\n                        <input\r\n                            required\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            onChange={changeHandler}\r\n                            placeholder=\"Enter Last Name\"\r\n                            value={formData.lastName}\r\n                            className='bg-pure-greys-700 rounded-[0.5rem] text-richblack-5 w-full p-[12px]  sm:placeholder:text-[16px] placeholder:text-[10px]'\r\n                        />\r\n                    </label>\r\n            </div>\r\n            {/* email Add */}\r\n            <div className='mt-[20px]'>\r\n            <label className='w-full mt-[20px]'>\r\n                    <p className='text-[0.875rem] text-richblack-5 mb-1 leading-[1.375rem]'>Email Address<sup className='text-pink-200'>*</sup></p>\r\n                    <input\r\n                        required\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        onChange={changeHandler}\r\n                        placeholder=\"Enter Email Address \"\r\n                        value={formData.email}\r\n                        className='bg-pure-greys-700 rounded-[0.5rem] text-richblack-5 w-full p-[12px]  sm:placeholder:text-[16px] placeholder:text-[10px]'\r\n                    />\r\n            </label>\r\n            </div>\r\n            \r\n\r\n            {/* createPassword and Confirm Password */}\r\n            <div className='w-full flex gap-x-4 mt-[20px]'>\r\n                <label className='w-full '>\r\n                    <p className='text-[0.875rem] text-richblack-5 mb-1 leading-[1.375rem]'>Create Password<sup className='text-pink-200'>*</sup></p>\r\n                  <div className='relative'>\r\n                    <input\r\n                        required\r\n                        type= {showPassword ? (\"text\") : (\"password\")}\r\n                        name=\"password\"\r\n                        onChange={changeHandler}\r\n                        placeholder=\"Enter Password\"\r\n                        value={formData.password}\r\n                        className='bg-pure-greys-700 rounded-[0.5rem] text-richblack-5  w-full p-[12px]  sm:placeholder:text-[16px] placeholder:text-[10px]'\r\n                    />\r\n                    <span\r\n                     className='absolute right-3  top-[13px]  cursor-pointer' \r\n                    onClick={() => setShowPassword((prev) => !prev)}>\r\n                        {showPassword ? \r\n\r\n                        (<AiOutlineEyeInvisible fontSize={24} fill='#AFB2BF'/>) : \r\n\r\n                        (<AiOutlineEye fontSize={24} fill='#AFB2BF'/>)}\r\n                </span>\r\n                </div>\r\n                </label>\r\n                \r\n\r\n                <label className='w-full relative'>\r\n                    \r\n                    <p className='text-[0.875rem] text-richblack-5 mb-1 leading-[1.375rem]'>Confirm Password<sup className='text-pink-200'>*</sup></p>\r\n                    <div className='relative'>\r\n                    <input\r\n                        required\r\n                        type= {showConfirmPassword ? (\"text\") : (\"password\")}\r\n                        name=\"confirmPassword\"\r\n                        onChange={changeHandler}\r\n                        placeholder=\"Confirm Password\"\r\n                        value={formData.confirmPassword}\r\n                        className='bg-pure-greys-700 rounded-[0.5rem] text-richblack-5 w-full p-[12px] sm:placeholder:text-[16px] placeholder:text-[10px]'\r\n                    />\r\n                    <span \r\n                     className='absolute right-3 top-[13px] cursor-pointer'\r\n                    onClick={() => setShowConfirmPassword((prev) => !prev)}>\r\n                        {showConfirmPassword ?\r\n\r\n                         (<AiOutlineEyeInvisible fontSize={24} fill='#AFB2BF'/>) : \r\n\r\n                         (<AiOutlineEye fontSize={24} fill='#AFB2BF'/>)}\r\n                    </span>\r\n                    </div>\r\n                </label>\r\n            </div>\r\n        <button className=' w-full bg-yellow-50 rounded-[8px] font-medium text-richblack-900 px-[12px] py-[8px] mt-6'>\r\n            Create Account\r\n        </button>\r\n        </form>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignupForm\r\n","import React, { useState } from 'react'\r\nimport { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\r\nimport { Link,  useNavigate } from 'react-router-dom';\r\nimport {encrypt,decrypt} from 'n-krypta'\r\nimport toast from 'react-hot-toast';\r\n\r\nconst LoginForm = ({setIsLoggedIn}) => {\r\n    // const {signUpdata,setSignUpData,}=useContext(Appcontext)\r\n    const navigate = useNavigate();\r\n let secretKey='@@123'\r\n\r\n    const [formData, setFormData] = useState( {\r\n        email:\"\", password:\"\"\r\n    })\r\n\r\n    const[showPassword, setShowPassword] = useState(false);\r\n\r\n    function changeHandler(event) {\r\n\r\n        setFormData( (prevData) =>(\r\n            {\r\n                ...prevData,\r\n                [event.target.name]:event.target.value\r\n            }\r\n        ) )\r\n\r\n    }\r\n    try{\r\n\r\n        var signupdata=decrypt((JSON.parse((localStorage.getItem(\"signUpData\")))),secretKey)\r\n    }\r\n    catch{\r\n      var signupdata=  {\r\n            firstName:\"\",\r\n            lastName:\"\",\r\n            email:\"\",\r\n            password:\"\",\r\n            confirmPassword:\"\",\r\n            dob:\"\",\r\n            about:\"\",\r\n            gender:\"\"\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    function submitHandler(event) {\r\n        event.preventDefault();\r\n        if(signupdata.email===formData.email){\r\n\r\n            setIsLoggedIn(true);\r\n            navigate(\"/dashboard/profile\");\r\n            toast.success(\"Login Successful\")\r\n        }\r\n        \r\n        \r\n        \r\n            else{\r\n                toast.error(\"something wrong in password or email\")\r\n                setFormData(\"\")\r\n            }\r\n           \r\n        \r\n\r\n\r\n\r\n        }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}\r\n    className=\"flex flex-col w-full gap-y-4 mt-6\">\r\n\r\n        <label className='w-full'>\r\n            <p className='text-[0.875rem] text-richblack-5 mb-1 leading-[1.375rem]'>\r\n                Email Address<sup className='text-pink-200'>*</sup>\r\n            </p>\r\n            <input \r\n                required\r\n                type=\"email\"\r\n                value = {formData.email}\r\n                onChange={changeHandler}\r\n                placeholder=\"Enter email address\"\r\n                name=\"email\"\r\n                className='bg-pure-greys-700 rounded-[0.5rem] text-richblack-5 w-full p-[12px]'\r\n            />\r\n        </label>\r\n\r\n        <label className='w-full relative'>\r\n            <p className='text-[0.875rem] text-richblack-5 mb-1 leading-[1.375rem]'>\r\n                Password<sup className='text-pink-200'>*</sup>\r\n            </p>\r\n            <input \r\n                required\r\n                type= {showPassword ? (\"text\") : (\"password\")}\r\n                value = {formData.password}\r\n                onChange={changeHandler}\r\n                placeholder=\"Enter Password\"\r\n                name=\"password\"\r\n                className='bg-pure-greys-700 rounded-[0.5rem] text-richblack-5 w-full p-[12px]'\r\n            />\r\n\r\n            <span \r\n            className='absolute right-3 top-[38px] cursor-pointer'\r\n            onClick={() => setShowPassword((prev) => !prev)}>\r\n                {showPassword ? \r\n\r\n                (<AiOutlineEyeInvisible fontSize={24} fill='#AFB2BF'/>) : \r\n\r\n                (<AiOutlineEye fontSize={24} fill='#AFB2BF'/>)}\r\n            </span>\r\n\r\n            <Link to=\"#\">\r\n                <p className='text-xs mt-1 text-blue-100 max-w-max ml-auto'>\r\n                    Forgot Password\r\n                </p>\r\n            </Link>\r\n        </label>\r\n\r\n        <button className='bg-yellow-50 rounded-[8px] font-medium text-richblack-900 px-[12px] py-[8px] mt-6'>\r\n            Sign In\r\n        </button>\r\n\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","import React from 'react'\r\n\r\nimport SignupForm from './SignupForm'\r\nimport LoginForm from './LoginForm'\r\nimport {FcGoogle} from \"react-icons/fc\"\r\n\r\n\r\nconst Template = ({title, desc1, desc2, formtype, setIsLoggedIn}) => {\r\n\r\n    \r\n  return (\r\n    <div className='flex shadow-md justify-center bg-pure-greys-900 mt-[50px]   w-11/12 max-w-[1160px] py-12 mx-auto   gap-y-0'>\r\n\r\n        <div className='p-5 border shadow-md shadow-cyan-500 w-11/12 bg-pure-greys-900 max-w-[450px]' >\r\n            <h1\r\n            className='text-richblack-5 font-semibold text-[1.875rem] leading-[2.375rem]' \r\n            >\r\n                {title}\r\n            </h1>\r\n\r\n            <p className='text-[1.125rem] leading[1.625rem] mt-4' >\r\n                <span className='text-richblack-100'>{desc1}</span>\r\n                <br/>\r\n                <span className='text-blue-100 italic'>{desc2}</span>\r\n            </p>\r\n\r\n            {formtype === \"signup\" ? \r\n            (<SignupForm setIsLoggedIn={setIsLoggedIn}/>):\r\n            (<LoginForm setIsLoggedIn={setIsLoggedIn}/>)}\r\n\r\n            <div className='flex w-full items-center my-4 gap-x-2'>\r\n                <div className='w-full h-[1px] bg-richblack-700'></div>\r\n                <p className='text-richblack-700 font-medium leading[1.375rem]'>\r\n                    OR\r\n                </p>\r\n                <div className='w-full h-[1px] bg-richblack-700'></div>\r\n            </div>\r\n\r\n            <button className='w-full flex justify-center items-center rounded-[8px] font-medium text-richblack-100\r\n            border border-richblack-700 px-[12px] py-[8px] gap-x-2 mt-6 '>\r\n                <FcGoogle/>\r\n                <p>Sign Up with Google</p>\r\n            </button>\r\n\r\n        </div>\r\n\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Template\r\n","import React from 'react'\r\n\r\nimport Template from '../components/Forms/Template'\r\n\r\nconst Signup = ({setIsLoggedIn}) => {\r\n  return (\r\n    <Template\r\n      title=\"Supercharge Your Learning Journey with LittleWorld – Explore for Free\"\r\n      desc1=\"Build skills for today, tomorrow, and beyond.\"\r\n      desc2=\"Education to future-proof your career.\"\r\n      \r\n      text=\"Revolutionizing education, the digital interface offers tools, resources, and interactive content for an enhanced online learning experience.\"\r\n      formtype=\"signup\"\r\n      setIsLoggedIn={setIsLoggedIn}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Signup\r\n"],"names":["_ref","setIsLoggedIn","navigate","useNavigate","formData","setFormData","useState","firstName","lastName","email","password","confirmPassword","dob","about","gender","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","accountType","setAccountType","changeHandler","event","prevData","target","name","value","_jsxs","children","className","_jsx","concat","onClick","onSubmit","preventDefault","finalData","encryptFinalData","encrypt","localStorage","setItem","JSON","stringify","toast","success","required","type","onChange","placeholder","prev","AiOutlineEyeInvisible","fontSize","fill","AiOutlineEye","signupdata","decrypt","parse","getItem","error","Link","to","title","desc1","desc2","formtype","SignupForm","LoginForm","FcGoogle","Template","text"],"sourceRoot":""}